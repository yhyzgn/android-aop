apply plugin: 'com.android.library'
apply plugin: 'plugin-aspectj'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.4.0-alpha05', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation 'androidx.appcompat:appcompat:1.3.1'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                group = "com.github.yhyzgn"
                artifactId = "android-aop"
                if (project.hasProperty('version')) {
                    version = project.findProperty('version')
                }

                // Adds javadocs and sources as separate jars.
                artifact androidJavadocsJar
                artifact(sourceJar)

                pom {
                    name = "Widgets"
                    description = 'Android AOP.'
                    url = 'https://github.com/yhyzgn/android-aop'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'yhyzgn'
                            name = 'yhyzgn'
                        }
                    }
                    scm {
                        connection = 'scm:git@github.com/yhyzgn/android-aop.git'
                        developerConnection = 'scm:git@github.com/yhyzgn/android-aop.git'
                        url = 'https://github.com/yhyzgn/android-aop'
                    }
                }
            }
        }
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}